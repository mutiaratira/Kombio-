# Import library yang diperlukan
import numpy as np
import pandas as pd
import pylab

# Data input
x = np.array([0.0, 1.0, 2.0, 2.5, 3.0])
y = np.array([2.9, 3.7, 4.1, 4.4, 5.0])
n = len(x)

# Menghitung nilai xy dan x^2
xy = x * y
x_squared = x ** 2

# Menghitung koefisien regresi
mean_x = np.mean(x)
mean_y = np.mean(y)
b = np.sum((x - mean_x) * (y - mean_y)) / np.sum((x - mean_x) ** 2)
a = mean_y - b * mean_x
squared_residuals = (y - a - b * x) ** 2

# Menyiapkan DataFrame
data = {'No.': range(1, len(x) + 1), 'x': x, 'y': y, 'xy': xy, 'x^2': x_squared, 'squared_residuals': squared_residuals}
df = pd.DataFrame(data)

# Menghitung total squared_residuals
total_squared_residuals = np.sum(squared_residuals)

# Menghitung total x, total y, total xy, dan total x^2
total_x = np.sum(x)
total_y = np.sum(y)
total_xy = np.sum(xy)
total_x_squared = np.sum(x_squared)

# Matriks C^-1.D
M = np.array([[n, total_x], [total_x, total_x_squared]])
N = np.array([[total_y], [total_xy]])
ab = np.dot(np.linalg.inv(M), N)
y_predicted = np.zeros(n, dtype=float)
for i in range(0, n):
    y_predicted[i] = ab[1] * x[i] + ab[0]

# Menampilkan koefisien regresi
print('Persamaan Regresi Linear: f(x) = ', a, '+', b, 'x')
print('Nilai a:', a)
print('Nilai b:', b)
print('\n')

# Menampilkan DataFrame
print('Tabel regresi linear dari data:')
print(df)
print('Total X:', total_x)
print('Total Y:', total_y)
print('Total XY:', total_xy)
print('Total X^2:', total_x_squared)
print('\n')

# Menampilkan nilai a, b, dan total squared_residuals
print('Hasil perhitungan:')
print('Nilai a:', a)
print('Nilai b:', b)
print('Total squared_residuals:', total_squared_residuals)
print('\n')

# Menampilkan grafik regresi
print('Grafik plot data:')
pylab.plot(x, y, 'og')
pylab.plot(x, y_predicted, '-y')
print('Keterangan: Garis kuning adalah hasil regresi linear')
